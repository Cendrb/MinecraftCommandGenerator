using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MCGData.Mobs
{
    public class Villager : Mob
    {
        /// <summary>
        /// The ID of the texture used for this villager. This also influences trading options.
        /// </summary>
        public int? Profession { get; set; }
        /// <summary>
        /// The ID of this villager's career. This also influences trading options and the villager's name in the GUI (if it does not have a CustomName). If 0, the next time offers are refreshed, the game will assign a new Career and reset CareerLevel to 1.
        /// </summary>
        public int? Career { get; set; }
        /// <summary>
        /// The current level of this villager's trading options. Influences the trading options generated by the villager; if it is greater than their career's maximum level, no new offers are generated. Increments when a trade causes offers to be refreshed. If 0, the next trade to do this will assign a new Career and set CareerLevel to 1. Set to a high enough level and there will be no new trades to release (Career must be set to 1 or above).
        /// </summary>
        public int? CareerLevel { get; set; }

        public Villager()
        {
            id = "Villager";
        }
    }
}
